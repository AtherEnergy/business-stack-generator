------------------------------------------
  Logging is implemented as a library in sails-helpers. 
  /config/log.js is overwritten

  #######################################
  Manual intervention required: 

  ### 1) Make sure your http middleware looks something like this: 
    middleware: {
      startRequestTimer: require('sails-helper').startRequestTimer,
      myRequestLogger: require('sails-helper').requestLogger,
      order: [
        'startRequestTimer',
        'cookieParser',
        'session',
        'passportInit',     
        'passportSession',
        'bodyParser',
        'myRequestLogger',
        'compress',
        'poweredBy',
        'router',
        'www',
        'favicon'
      ]
    }
  Basically 'startRequestTimer' should be at the top. 'myRequestLogger' can come after 'bodyParser'

  -----------------------------------------

  ### 2) Production log level
  By default sails 1.x.x has log level as debug in production.js request log is printed as info. comment out log level in production.js

  ------------------------------------------
  ### 3) Create firehose delivery streams for nodejs, nginx access and nginx error nginx_access_log_stream
  
  pattern for nodejs stream name - k_<microservice>_nodejs_log
  pattern for nginx access log stream name - k_<microservice>_nginx_access_log
  pattern for nginx error log stream name - k_<microservice>_nginx_error_log

  ------------------------------------------

  ### 4) Configure .ebextensions/kinesis.config
  values to be replaced:
  replace - firehose.<region>.amazonaws.com with your aws region where you setup kinesis
  replace - nginx_access_log_stream with your firehose nginx access stream
  replace - nginx_error_log_stream with your firehose nginx error stream
  replace - nodejs_log_stream with your firehose node app stream 
